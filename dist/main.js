(()=>{"use strict";const t="srgb",s="srgb-linear";class i{constructor(t=0,s=0){i.prototype.isVector2=!0,this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,h=t.elements;return this.x=h[0]*s+h[3]*i+h[6],this.y=h[1]*s+h[4]*i+h[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}rotateAround(t,s){const i=Math.cos(s),h=Math.sin(s),r=this.x-t.x,e=this.y-t.y;return this.x=r*i-e*h+t.x,this.y=r*h+e*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}function h(t,s,i){return Math.max(s,Math.min(i,t))}function r(t,s,i){return(1-i)*t+i*s}Math.PI,Math.PI;class e{constructor(t=0,s=0,i=0,h=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=i,this._w=h}static slerpFlat(t,s,i,h,r,e,n){let a=i[h+0],o=i[h+1],l=i[h+2],u=i[h+3];const c=r[e+0],y=r[e+1],x=r[e+2],m=r[e+3];if(0===n)return t[s+0]=a,t[s+1]=o,t[s+2]=l,void(t[s+3]=u);if(1===n)return t[s+0]=c,t[s+1]=y,t[s+2]=x,void(t[s+3]=m);if(u!==m||a!==c||o!==y||l!==x){let t=1-n;const s=a*c+o*y+l*x+u*m,i=s>=0?1:-1,h=1-s*s;if(h>Number.EPSILON){const r=Math.sqrt(h),e=Math.atan2(r,s*i);t=Math.sin(t*e)/r,n=Math.sin(n*e)/r}const r=n*i;if(a=a*t+c*r,o=o*t+y*r,l=l*t+x*r,u=u*t+m*r,t===1-n){const t=1/Math.sqrt(a*a+o*o+l*l+u*u);a*=t,o*=t,l*=t,u*=t}}t[s]=a,t[s+1]=o,t[s+2]=l,t[s+3]=u}static multiplyQuaternionsFlat(t,s,i,h,r,e){const n=i[h],a=i[h+1],o=i[h+2],l=i[h+3],u=r[e],c=r[e+1],y=r[e+2],x=r[e+3];return t[s]=n*x+l*u+a*y-o*c,t[s+1]=a*x+l*c+o*u-n*y,t[s+2]=o*x+l*y+n*c-a*u,t[s+3]=l*x-n*u-a*c-o*y,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,h){return this._x=t,this._y=s,this._z=i,this._w=h,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s){const i=t._x,h=t._y,r=t._z,e=t._order,n=Math.cos,a=Math.sin,o=n(i/2),l=n(h/2),u=n(r/2),c=a(i/2),y=a(h/2),x=a(r/2);switch(e){case"XYZ":this._x=c*l*u+o*y*x,this._y=o*y*u-c*l*x,this._z=o*l*x+c*y*u,this._w=o*l*u-c*y*x;break;case"YXZ":this._x=c*l*u+o*y*x,this._y=o*y*u-c*l*x,this._z=o*l*x-c*y*u,this._w=o*l*u+c*y*x;break;case"ZXY":this._x=c*l*u-o*y*x,this._y=o*y*u+c*l*x,this._z=o*l*x+c*y*u,this._w=o*l*u-c*y*x;break;case"ZYX":this._x=c*l*u-o*y*x,this._y=o*y*u+c*l*x,this._z=o*l*x-c*y*u,this._w=o*l*u+c*y*x;break;case"YZX":this._x=c*l*u+o*y*x,this._y=o*y*u+c*l*x,this._z=o*l*x-c*y*u,this._w=o*l*u-c*y*x;break;case"XZY":this._x=c*l*u-o*y*x,this._y=o*y*u-c*l*x,this._z=o*l*x+c*y*u,this._w=o*l*u+c*y*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+e)}return!1!==s&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,h=Math.sin(i);return this._x=t.x*h,this._y=t.y*h,this._z=t.z*h,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],h=s[4],r=s[8],e=s[1],n=s[5],a=s[9],o=s[2],l=s[6],u=s[10],c=i+n+u;if(c>0){const t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(l-a)*t,this._y=(r-o)*t,this._z=(e-h)*t}else if(i>n&&i>u){const t=2*Math.sqrt(1+i-n-u);this._w=(l-a)/t,this._x=.25*t,this._y=(h+e)/t,this._z=(r+o)/t}else if(n>u){const t=2*Math.sqrt(1+n-i-u);this._w=(r-o)/t,this._x=(h+e)/t,this._y=.25*t,this._z=(a+l)/t}else{const t=2*Math.sqrt(1+u-i-n);this._w=(e-h)/t,this._x=(r+o)/t,this._y=(a+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(h(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(0===i)return this;const h=Math.min(1,s/i);return this.slerp(t,h),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,h=t._y,r=t._z,e=t._w,n=s._x,a=s._y,o=s._z,l=s._w;return this._x=i*l+e*n+h*o-r*a,this._y=h*l+e*a+r*n-i*o,this._z=r*l+e*o+i*a-h*n,this._w=e*l-i*n-h*a-r*o,this._onChangeCallback(),this}slerp(t,s){if(0===s)return this;if(1===s)return this.copy(t);const i=this._x,h=this._y,r=this._z,e=this._w;let n=e*t._w+i*t._x+h*t._y+r*t._z;if(n<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,n=-n):this.copy(t),n>=1)return this._w=e,this._x=i,this._y=h,this._z=r,this;const a=1-n*n;if(a<=Number.EPSILON){const t=1-s;return this._w=t*e+s*this._w,this._x=t*i+s*this._x,this._y=t*h+s*this._y,this._z=t*r+s*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(a),l=Math.atan2(o,n),u=Math.sin((1-s)*l)/o,c=Math.sin(s*l)/o;return this._w=e*u+this._w*c,this._x=i*u+this._x*c,this._y=h*u+this._y*c,this._z=r*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,s,i){return this.copy(t).slerp(s,i)}random(){const t=Math.random(),s=Math.sqrt(1-t),i=Math.sqrt(t),h=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(s*Math.cos(h),i*Math.sin(r),i*Math.cos(r),s*Math.sin(h))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class n{constructor(t=0,s=0,i=0){n.prototype.isVector3=!0,this.x=t,this.y=s,this.z=i}set(t,s,i){return void 0===i&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(o.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(o.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,h=this.z,r=t.elements;return this.x=r[0]*s+r[3]*i+r[6]*h,this.y=r[1]*s+r[4]*i+r[7]*h,this.z=r[2]*s+r[5]*i+r[8]*h,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,h=this.z,r=t.elements,e=1/(r[3]*s+r[7]*i+r[11]*h+r[15]);return this.x=(r[0]*s+r[4]*i+r[8]*h+r[12])*e,this.y=(r[1]*s+r[5]*i+r[9]*h+r[13])*e,this.z=(r[2]*s+r[6]*i+r[10]*h+r[14])*e,this}applyQuaternion(t){const s=this.x,i=this.y,h=this.z,r=t.x,e=t.y,n=t.z,a=t.w,o=a*s+e*h-n*i,l=a*i+n*s-r*h,u=a*h+r*i-e*s,c=-r*s-e*i-n*h;return this.x=o*a+c*-r+l*-n-u*-e,this.y=l*a+c*-e+u*-r-o*-n,this.z=u*a+c*-n+o*-e-l*-r,this}transformDirection(t){const s=this.x,i=this.y,h=this.z,r=t.elements;return this.x=r[0]*s+r[4]*i+r[8]*h,this.y=r[1]*s+r[5]*i+r[9]*h,this.z=r[2]*s+r[6]*i+r[10]*h,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,h=t.y,r=t.z,e=s.x,n=s.y,a=s.z;return this.x=h*a-r*n,this.y=r*e-i*a,this.z=i*n-h*e,this}projectOnVector(t){const s=t.lengthSq();if(0===s)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return a.copy(this).projectOnVector(t),this.sub(a)}reflect(t){return this.sub(a.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===s)return Math.PI/2;const i=this.dot(t)/s;return Math.acos(h(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,h=this.z-t.z;return s*s+i*i+h*h}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const h=Math.sin(s)*t;return this.x=h*Math.sin(i),this.y=Math.cos(s)*t,this.z=h*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),h=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=h,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,4*s)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,3*s)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),s=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(s),this.y=i*Math.sin(s),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const a=new n,o=new e;function l(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function u(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const c={[t]:{[s]:l},[s]:{[t]:u}},y={legacyMode:!0,get workingColorSpace(){return s},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,s,i){if(this.legacyMode||s===i||!s||!i)return t;if(c[s]&&void 0!==c[s][i]){const h=c[s][i];return t.r=h(t.r),t.g=h(t.g),t.b=h(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,s){return this.convert(t,this.workingColorSpace,s)},toWorkingColorSpace:function(t,s){return this.convert(t,s,this.workingColorSpace)}},x={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},m={r:0,g:0,b:0},_={h:0,s:0,l:0},d={h:0,s:0,l:0};function g(t,s,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(s-t)*i:i<.5?s:i<2/3?t+6*(s-t)*(2/3-i):t}function M(t,s){return s.r=t.r,s.g=t.g,s.b=t.b,s}class z{constructor(t,s,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===s&&void 0===i?this.set(t):this.setRGB(t,s,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(s,i=t){return s=Math.floor(s),this.r=(s>>16&255)/255,this.g=(s>>8&255)/255,this.b=(255&s)/255,y.toWorkingColorSpace(this,i),this}setRGB(t,s,i,h=y.workingColorSpace){return this.r=t,this.g=s,this.b=i,y.toWorkingColorSpace(this,h),this}setHSL(t,s,i,r=y.workingColorSpace){if(t=(t%(e=1)+e)%e,s=h(s,0,1),i=h(i,0,1),0===s)this.r=this.g=this.b=i;else{const h=i<=.5?i*(1+s):i+s-i*s,r=2*i-h;this.r=g(r,h,t+1/3),this.g=g(r,h,t),this.b=g(r,h,t-1/3)}var e;return y.toWorkingColorSpace(this,r),this}setStyle(s,i=t){function h(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+s+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(s)){let t;const s=r[1],e=r[2];switch(s){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(e))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,y.toWorkingColorSpace(this,i),h(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(e))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,y.toWorkingColorSpace(this,i),h(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(e)){const s=parseFloat(t[1])/360,r=parseFloat(t[2])/100,e=parseFloat(t[3])/100;return h(t[4]),this.setHSL(s,r,e,i)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(s)){const t=r[1],s=t.length;if(3===s)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,y.toWorkingColorSpace(this,i),this;if(6===s)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,y.toWorkingColorSpace(this,i),this}return s&&s.length>0?this.setColorName(s,i):this}setColorName(s,i=t){const h=x[s.toLowerCase()];return void 0!==h?this.setHex(h,i):console.warn("THREE.Color: Unknown color "+s),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=l(t.r),this.g=l(t.g),this.b=l(t.b),this}copyLinearToSRGB(t){return this.r=u(t.r),this.g=u(t.g),this.b=u(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(s=t){return y.fromWorkingColorSpace(M(this,m),s),h(255*m.r,0,255)<<16^h(255*m.g,0,255)<<8^h(255*m.b,0,255)}getHexString(s=t){return("000000"+this.getHex(s).toString(16)).slice(-6)}getHSL(t,s=y.workingColorSpace){y.fromWorkingColorSpace(M(this,m),s);const i=m.r,h=m.g,r=m.b,e=Math.max(i,h,r),n=Math.min(i,h,r);let a,o;const l=(n+e)/2;if(n===e)a=0,o=0;else{const t=e-n;switch(o=l<=.5?t/(e+n):t/(2-e-n),e){case i:a=(h-r)/t+(h<r?6:0);break;case h:a=(r-i)/t+2;break;case r:a=(i-h)/t+4}a/=6}return t.h=a,t.s=o,t.l=l,t}getRGB(t,s=y.workingColorSpace){return y.fromWorkingColorSpace(M(this,m),s),t.r=m.r,t.g=m.g,t.b=m.b,t}getStyle(s=t){return y.fromWorkingColorSpace(M(this,m),s),s!==t?`color(${s} ${m.r} ${m.g} ${m.b})`:`rgb(${255*m.r|0},${255*m.g|0},${255*m.b|0})`}offsetHSL(t,s,i){return this.getHSL(_),_.h+=t,_.s+=s,_.l+=i,this.setHSL(_.h,_.s,_.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,s){return this.r=t.r+s.r,this.g=t.g+s.g,this.b=t.b+s.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,s){return this.r+=(t.r-this.r)*s,this.g+=(t.g-this.g)*s,this.b+=(t.b-this.b)*s,this}lerpColors(t,s,i){return this.r=t.r+(s.r-t.r)*i,this.g=t.g+(s.g-t.g)*i,this.b=t.b+(s.b-t.b)*i,this}lerpHSL(t,s){this.getHSL(_),t.getHSL(d);const i=r(_.h,d.h,s),h=r(_.s,d.s,s),e=r(_.l,d.l,s);return this.setHSL(i,h,e),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,s=0){return this.r=t[s],this.g=t[s+1],this.b=t[s+2],this}toArray(t=[],s=0){return t[s]=this.r,t[s+1]=this.g,t[s+2]=this.b,t}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}z.NAMES=x;class p{constructor(){p.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,s,i,h,r,e,n,a,o,l,u,c,y,x,m,_){const d=this.elements;return d[0]=t,d[4]=s,d[8]=i,d[12]=h,d[1]=r,d[5]=e,d[9]=n,d[13]=a,d[2]=o,d[6]=l,d[10]=u,d[14]=c,d[3]=y,d[7]=x,d[11]=m,d[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new p).fromArray(this.elements)}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],s[9]=i[9],s[10]=i[10],s[11]=i[11],s[12]=i[12],s[13]=i[13],s[14]=i[14],s[15]=i[15],this}copyPosition(t){const s=this.elements,i=t.elements;return s[12]=i[12],s[13]=i[13],s[14]=i[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,i){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,s,i){return this.set(t.x,s.x,i.x,0,t.y,s.y,i.y,0,t.z,s.z,i.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,i=t.elements,h=1/b.setFromMatrixColumn(t,0).length(),r=1/b.setFromMatrixColumn(t,1).length(),e=1/b.setFromMatrixColumn(t,2).length();return s[0]=i[0]*h,s[1]=i[1]*h,s[2]=i[2]*h,s[3]=0,s[4]=i[4]*r,s[5]=i[5]*r,s[6]=i[6]*r,s[7]=0,s[8]=i[8]*e,s[9]=i[9]*e,s[10]=i[10]*e,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){const s=this.elements,i=t.x,h=t.y,r=t.z,e=Math.cos(i),n=Math.sin(i),a=Math.cos(h),o=Math.sin(h),l=Math.cos(r),u=Math.sin(r);if("XYZ"===t.order){const t=e*l,i=e*u,h=n*l,r=n*u;s[0]=a*l,s[4]=-a*u,s[8]=o,s[1]=i+h*o,s[5]=t-r*o,s[9]=-n*a,s[2]=r-t*o,s[6]=h+i*o,s[10]=e*a}else if("YXZ"===t.order){const t=a*l,i=a*u,h=o*l,r=o*u;s[0]=t+r*n,s[4]=h*n-i,s[8]=e*o,s[1]=e*u,s[5]=e*l,s[9]=-n,s[2]=i*n-h,s[6]=r+t*n,s[10]=e*a}else if("ZXY"===t.order){const t=a*l,i=a*u,h=o*l,r=o*u;s[0]=t-r*n,s[4]=-e*u,s[8]=h+i*n,s[1]=i+h*n,s[5]=e*l,s[9]=r-t*n,s[2]=-e*o,s[6]=n,s[10]=e*a}else if("ZYX"===t.order){const t=e*l,i=e*u,h=n*l,r=n*u;s[0]=a*l,s[4]=h*o-i,s[8]=t*o+r,s[1]=a*u,s[5]=r*o+t,s[9]=i*o-h,s[2]=-o,s[6]=n*a,s[10]=e*a}else if("YZX"===t.order){const t=e*a,i=e*o,h=n*a,r=n*o;s[0]=a*l,s[4]=r-t*u,s[8]=h*u+i,s[1]=u,s[5]=e*l,s[9]=-n*l,s[2]=-o*l,s[6]=i*u+h,s[10]=t-r*u}else if("XZY"===t.order){const t=e*a,i=e*o,h=n*a,r=n*o;s[0]=a*l,s[4]=-u,s[8]=o*l,s[1]=t*u+r,s[5]=e*l,s[9]=i*u-h,s[2]=h*u-i,s[6]=n*l,s[10]=r*u+t}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(k,t,C)}lookAt(t,s,i){const h=this.elements;return F.subVectors(t,s),0===F.lengthSq()&&(F.z=1),F.normalize(),S.crossVectors(i,F),0===S.lengthSq()&&(1===Math.abs(i.z)?F.x+=1e-4:F.z+=1e-4,F.normalize(),S.crossVectors(i,F)),S.normalize(),f.crossVectors(F,S),h[0]=S.x,h[4]=f.x,h[8]=F.x,h[1]=S.y,h[5]=f.y,h[9]=F.y,h[2]=S.z,h[6]=f.z,h[10]=F.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,h=s.elements,r=this.elements,e=i[0],n=i[4],a=i[8],o=i[12],l=i[1],u=i[5],c=i[9],y=i[13],x=i[2],m=i[6],_=i[10],d=i[14],g=i[3],M=i[7],z=i[11],p=i[15],b=h[0],w=h[4],k=h[8],C=h[12],S=h[1],f=h[5],F=h[9],q=h[13],v=h[2],A=h[6],E=h[10],R=h[14],Z=h[3],X=h[7],Y=h[11],T=h[15];return r[0]=e*b+n*S+a*v+o*Z,r[4]=e*w+n*f+a*A+o*X,r[8]=e*k+n*F+a*E+o*Y,r[12]=e*C+n*q+a*R+o*T,r[1]=l*b+u*S+c*v+y*Z,r[5]=l*w+u*f+c*A+y*X,r[9]=l*k+u*F+c*E+y*Y,r[13]=l*C+u*q+c*R+y*T,r[2]=x*b+m*S+_*v+d*Z,r[6]=x*w+m*f+_*A+d*X,r[10]=x*k+m*F+_*E+d*Y,r[14]=x*C+m*q+_*R+d*T,r[3]=g*b+M*S+z*v+p*Z,r[7]=g*w+M*f+z*A+p*X,r[11]=g*k+M*F+z*E+p*Y,r[15]=g*C+M*q+z*R+p*T,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[4],h=t[8],r=t[12],e=t[1],n=t[5],a=t[9],o=t[13],l=t[2],u=t[6],c=t[10],y=t[14];return t[3]*(+r*a*u-h*o*u-r*n*c+i*o*c+h*n*y-i*a*y)+t[7]*(+s*a*y-s*o*c+r*e*c-h*e*y+h*o*l-r*a*l)+t[11]*(+s*o*u-s*n*y-r*e*u+i*e*y+r*n*l-i*o*l)+t[15]*(-h*n*l-s*a*u+s*n*c+h*e*u-i*e*c+i*a*l)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,i){const h=this.elements;return t.isVector3?(h[12]=t.x,h[13]=t.y,h[14]=t.z):(h[12]=t,h[13]=s,h[14]=i),this}invert(){const t=this.elements,s=t[0],i=t[1],h=t[2],r=t[3],e=t[4],n=t[5],a=t[6],o=t[7],l=t[8],u=t[9],c=t[10],y=t[11],x=t[12],m=t[13],_=t[14],d=t[15],g=u*_*o-m*c*o+m*a*y-n*_*y-u*a*d+n*c*d,M=x*c*o-l*_*o-x*a*y+e*_*y+l*a*d-e*c*d,z=l*m*o-x*u*o+x*n*y-e*m*y-l*n*d+e*u*d,p=x*u*a-l*m*a-x*n*c+e*m*c+l*n*_-e*u*_,b=s*g+i*M+h*z+r*p;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/b;return t[0]=g*w,t[1]=(m*c*r-u*_*r-m*h*y+i*_*y+u*h*d-i*c*d)*w,t[2]=(n*_*r-m*a*r+m*h*o-i*_*o-n*h*d+i*a*d)*w,t[3]=(u*a*r-n*c*r-u*h*o+i*c*o+n*h*y-i*a*y)*w,t[4]=M*w,t[5]=(l*_*r-x*c*r+x*h*y-s*_*y-l*h*d+s*c*d)*w,t[6]=(x*a*r-e*_*r-x*h*o+s*_*o+e*h*d-s*a*d)*w,t[7]=(e*c*r-l*a*r+l*h*o-s*c*o-e*h*y+s*a*y)*w,t[8]=z*w,t[9]=(x*u*r-l*m*r-x*i*y+s*m*y+l*i*d-s*u*d)*w,t[10]=(e*m*r-x*n*r+x*i*o-s*m*o-e*i*d+s*n*d)*w,t[11]=(l*n*r-e*u*r-l*i*o+s*u*o+e*i*y-s*n*y)*w,t[12]=p*w,t[13]=(l*m*h-x*u*h+x*i*c-s*m*c-l*i*_+s*u*_)*w,t[14]=(x*n*h-e*m*h-x*i*a+s*m*a+e*i*_-s*n*_)*w,t[15]=(e*u*h-l*n*h+l*i*a-s*u*a-e*i*c+s*n*c)*w,this}scale(t){const s=this.elements,i=t.x,h=t.y,r=t.z;return s[0]*=i,s[4]*=h,s[8]*=r,s[1]*=i,s[5]*=h,s[9]*=r,s[2]*=i,s[6]*=h,s[10]*=r,s[3]*=i,s[7]*=h,s[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],h=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,i,h))}makeTranslation(t,s,i){return this.set(1,0,0,t,0,1,0,s,0,0,1,i,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,s,-i,0,0,i,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,0,i,0,0,1,0,0,-i,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,0,i,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const i=Math.cos(s),h=Math.sin(s),r=1-i,e=t.x,n=t.y,a=t.z,o=r*e,l=r*n;return this.set(o*e+i,o*n-h*a,o*a+h*n,0,o*n+h*a,l*n+i,l*a-h*e,0,o*a-h*n,l*a+h*e,r*a*a+i,0,0,0,0,1),this}makeScale(t,s,i){return this.set(t,0,0,0,0,s,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,s,i,h,r,e){return this.set(1,i,r,0,t,1,e,0,s,h,1,0,0,0,0,1),this}compose(t,s,i){const h=this.elements,r=s._x,e=s._y,n=s._z,a=s._w,o=r+r,l=e+e,u=n+n,c=r*o,y=r*l,x=r*u,m=e*l,_=e*u,d=n*u,g=a*o,M=a*l,z=a*u,p=i.x,b=i.y,w=i.z;return h[0]=(1-(m+d))*p,h[1]=(y+z)*p,h[2]=(x-M)*p,h[3]=0,h[4]=(y-z)*b,h[5]=(1-(c+d))*b,h[6]=(_+g)*b,h[7]=0,h[8]=(x+M)*w,h[9]=(_-g)*w,h[10]=(1-(c+m))*w,h[11]=0,h[12]=t.x,h[13]=t.y,h[14]=t.z,h[15]=1,this}decompose(t,s,i){const h=this.elements;let r=b.set(h[0],h[1],h[2]).length();const e=b.set(h[4],h[5],h[6]).length(),n=b.set(h[8],h[9],h[10]).length();this.determinant()<0&&(r=-r),t.x=h[12],t.y=h[13],t.z=h[14],w.copy(this);const a=1/r,o=1/e,l=1/n;return w.elements[0]*=a,w.elements[1]*=a,w.elements[2]*=a,w.elements[4]*=o,w.elements[5]*=o,w.elements[6]*=o,w.elements[8]*=l,w.elements[9]*=l,w.elements[10]*=l,s.setFromRotationMatrix(w),i.x=r,i.y=e,i.z=n,this}makePerspective(t,s,i,h,r,e){const n=this.elements,a=2*r/(s-t),o=2*r/(i-h),l=(s+t)/(s-t),u=(i+h)/(i-h),c=-(e+r)/(e-r),y=-2*e*r/(e-r);return n[0]=a,n[4]=0,n[8]=l,n[12]=0,n[1]=0,n[5]=o,n[9]=u,n[13]=0,n[2]=0,n[6]=0,n[10]=c,n[14]=y,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this}makeOrthographic(t,s,i,h,r,e){const n=this.elements,a=1/(s-t),o=1/(i-h),l=1/(e-r),u=(s+t)*a,c=(i+h)*o,y=(e+r)*l;return n[0]=2*a,n[4]=0,n[8]=0,n[12]=-u,n[1]=0,n[5]=2*o,n[9]=0,n[13]=-c,n[2]=0,n[6]=0,n[10]=-2*l,n[14]=-y,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this}equals(t){const s=this.elements,i=t.elements;for(let t=0;t<16;t++)if(s[t]!==i[t])return!1;return!0}fromArray(t,s=0){for(let i=0;i<16;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t[s+9]=i[9],t[s+10]=i[10],t[s+11]=i[11],t[s+12]=i[12],t[s+13]=i[13],t[s+14]=i[14],t[s+15]=i[15],t}}const b=new n,w=new p,k=new n(0,0,0),C=new n(1,1,1),S=new n,f=new n,F=new n,q=new p,v=new e;class A{constructor(t=0,s=0,i=0,h=A.DefaultOrder){this.isEuler=!0,this._x=t,this._y=s,this._z=i,this._order=h}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,i,h=this._order){return this._x=t,this._y=s,this._z=i,this._order=h,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,i=!0){const r=t.elements,e=r[0],n=r[4],a=r[8],o=r[1],l=r[5],u=r[9],c=r[2],y=r[6],x=r[10];switch(s){case"XYZ":this._y=Math.asin(h(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,x),this._z=Math.atan2(-n,e)):(this._x=Math.atan2(y,l),this._z=0);break;case"YXZ":this._x=Math.asin(-h(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,x),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,e),this._z=0);break;case"ZXY":this._x=Math.asin(h(y,-1,1)),Math.abs(y)<.9999999?(this._y=Math.atan2(-c,x),this._z=Math.atan2(-n,l)):(this._y=0,this._z=Math.atan2(o,e));break;case"ZYX":this._y=Math.asin(-h(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(y,x),this._z=Math.atan2(o,e)):(this._x=0,this._z=Math.atan2(-n,l));break;case"YZX":this._z=Math.asin(h(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,e)):(this._x=0,this._y=Math.atan2(a,x));break;case"XZY":this._z=Math.asin(-h(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(y,l),this._y=Math.atan2(a,e)):(this._x=Math.atan2(-u,x),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,s,i){return q.makeRotationFromQuaternion(t),this.setFromRotationMatrix(q,s,i)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return v.setFromEuler(this),this.setFromQuaternion(v,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}A.DefaultOrder="XYZ",A.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Symbol.iterator;const E=new i(1,2),R=new i(2,3);console.log(E),console.log(R)})();